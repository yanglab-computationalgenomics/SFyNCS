I. About
SFyNCS (Somatic Fusions involving Non-Coding Sequences) detects fusion transcripts from pair-end RNA-seq data, please refer to user manual for more detail.
Version 0.14


II. Prerequisites
1. Software environment
- Unix/Linux system
- Python2 (tested v2.7.5, v2.7.11), it can be downloaded at https://www.python.org/downloads or installed with conda (https://anaconda.org/bioconda/python, please specify version when installing).
- Perl (v5.010 or above), it can be downloaded at https://www.perl.org/get.html or installed with conda (https://anaconda.org/conda-forge/perl).
- Blat (tested v35, v36), it can be downloaded at http://hgdownload.soe.ucsc.edu/admin/exe or installed with conda (https://anaconda.org/bioconda/blat).
- Bedtools (tested v2.25.0, v2.26.0, v2.27.1), it can be downloaded at https://github.com/arq5x/bedtools2/releases or installed with conda (https://anaconda.org/bioconda/blat).
- Bowtie2 (tested v2.1.0, v2.2.5, v2.2.9, v2.3.0, v2.3.2, v2.3.4.3), it can be downloaded at https://sourceforge.net/projects/bowtie-bio/files/bowtie2/ or installed with conda (https://anaconda.org/bioconda/bowtie2).
- STAR (v2.6.1a or above, tested v2.6.1a, v2.6.1d, v2.7.0f), it can be downloaded at https://github.com/alexdobin/STAR/releases or installed with conda (https://anaconda.org/bioconda/star).
- Samtools (tested v0.1.19, v1.1, v1.3.1, v1.5), it can be downloaded at https://github.com/samtools/samtools/releases or installed with conda (https://anaconda.org/bioconda/samtools).
- TopHat2 (must be v2.1.0), it can be downloaded at http://ccb.jhu.edu/software/tophat/downloads or installed with conda (https://anaconda.org/bioconda/tophat, please specify version when installing).
  Note that tophat needs to be v2.1.0 (2.1.1 or 2.0.13 won't work). Follow these steps to install:
    wget http://ccb.jhu.edu/software/tophat/downloads/tophat-2.1.0.Linux_x86_64.tar.gz
    tar -zxvf tophat-2.1.0.Linux_x86_64.tar.gz
    export PATH=$PWD/tophat-2.1.0.Linux_x86_64:$PATH
    chmod u+x tophat-2.1.0.Linux_x86_64/* 
- It takes 14 minutes to install all below packages using conda:
  conda create --no-default-packages -n SFyNCS
  source activate SFyNCS
  conda install -c anaconda python=2.7.11
  conda install -c conda-forge perl=5.26.2
  conda install -c bioconda blat=36
  conda install -c bioconda bedtools=2.27.1
  conda install -c bioconda bowtie2=2.3.4.3
  conda install -c bioconda star=2.7.0f
  conda install -c bioconda samtools=1.3.1
  conda install -c bioconda tophat=2.1.0

2. Reference, index and annotation files
- Reference genome sequence in fasta format
- STAR index of the reference genome
- Tophat/Bowtie2 index of the reference genome
- Fai index of the reference genome (automatically generated by samtools)
- Gene annotation of the reference genome in Gene Predictions Extended (gpe) format (please refer to https://genome.ucsc.edu/FAQ/FAQformat.html#format9 for more detail). SFyNCS provides gencode_v29_hg38.gpe.

2.1. Build STAR index (skip this step if Chimeric.out.junction is available). We suggest chr1-chr22, chrX, chrY and chrM only. Please specify number_of_thread in command below.
mkdir -p /path_to/star_index_dir
STAR --runThreadN number_of_thread --runMode genomeGenerate --genomeDir /path_to/star_index_dir --genomeFastaFiles /path_to/genome.fasta

2.2. Buils Tophat/Bowtie2 index. Please specify file_prefix in commands below.
mkdir -p /path_to/tophat_index_dir
bowtie2-build /path_to/genome.fasta /path_to/tophat_index_dir/file_prefix
ln -s /path_to/genome.fasta /path_to/tophat_index_dir/file_prefix.fa

2.3. Gene annotation is in Gene Predictions Extended (gpe) format. A header is needed (can be any artifact header). X chromosome should be chrX and Y chromosome should be chrY.
Example of gene annotation:
Transcript_id           Chr     Strand   Transcript_start_position  Transcript_end_position CDS_start_position  CDS_end_position  Exon_count    Exon_starts                     Exon_ends                     Score   Symbol  CDS_start_stat  CDS_end_stat  Exon_frame
ENST00000485503.1       chr7    +         55192810                  55200802                55200802            55200802          3             55192810,55198716,55200315,     55192841,55198863,55200802,   0       EGFR    none            none          -1,-1,-1,

3. Input files
SFyNCS requires two paired-end fastq.gz files as input. It will use STAR to align reads and use Chimeric.out.junction to call fusion candidates. Then it will use Tophat to perform split read and read pair mapping, and use blat to perform split read mapping. If users have generated Chimeric.out.junction by STAR prior to running SFyNCS, the STAR alignment step can be skipped. This can speed up the process significantly.
Chimeric.out.junction file can be produced by STAR with following command, please specify /path_to/star_index_dir, number_of_thread and /path_to/star_output_dir in the command:
STAR --genomeDir /path_to/star_index_dir  \
  --readFilesIn 1.fastq.gz 2.fastq.gz  \
  --readFilesCommand zcat \
  --runThreadN number_of_thread \
  --outFileNamePrefix /path_to/star_output_dir \
  --outReadsUnmapped None  \
  --twopassMode Basic \
  --outSAMstrandField intronMotif  \
  --outSAMunmapped Within  \
  --chimSegmentMin 12  \
  --chimJunctionOverhangMin 12  \
  --chimOutJunctionFormat 1  \
  --alignSJDBoverhangMin 10  \
  --alignMatesGapMax 100000  \
  --alignIntronMax 100000  \
  --alignSJstitchMismatchNmax 5 -1 5 5  \
  --outSAMattrRGline ID:GRPundef  \
  --chimMultimapScoreRange 10 \
  --chimMultimapNmax 10 \
  --chimNonchimScoreDropMin 10  \
  --peOverlapNbasesMin 12 \
  --peOverlapMMp 0.1  \
  --outSAMtype BAM SortedByCoordinate \
  --genomeLoad NoSharedMemory
  
  
III. Example
Note: all files under the example directory are for testing only.
1. Decompress SFyNCS: 
  tar -zxvf SFyNCS.tar.gz
2. Decompress example.tar.gz and enter example directory: 
  cd SFyNCS
  tar -zxvf example.tar.gz
  cd example
3. Build STAR index:
  mkdir star_index
  STAR --runThreadN 1 --runMode genomeGenerate --genomeDir star_index --genomeFastaFiles toy_reference_genome_sequence.fasta
4. Build Tophat/Bowtie2 index:
  mkdir -p tophat_index
  bowtie2-build toy_reference_genome_sequence.fasta tophat_index/tophat
  ln -s $PWD/toy_reference_genome_sequence.fasta $PWD/tophat_index/tophat.fa
5. Run SFyNCS:
5.1. Only using fastq.gz files:
  bash ../run_SFyNCS.sh -p 1 -o demo_output -a toy_gene_annotation.gpe -g toy_reference_genome_sequence.fasta -s star_index -t tophat_index/tophat -d toy_normal_directory toy_pair_end_reads_1.fastq.gz toy_pair_end_reads_2.fastq.gz
5.2. Using Chimeric.out.junction produced by STAR and fastq.gz files:
  bash ../run_SFyNCS.sh -p 1 -c Chimeric.out.junction -o demo_output -a toy_gene_annotation.gpe -g toy_reference_genome_sequence.fasta -t tophat_index/tophat -d toy_normal_directory toy_pair_end_reads_1.fastq.gz toy_pair_end_reads_2.fastq.gz
It will take 1 minute to run the example. You should get fusions.tsv.gz and fusions_abridged.tsv.gz under demo_output, please make sure the content in these two output files are the same as the files under example.


IV. Workflow
SFyNCS can be run by the following command. Users can further provide "-p thread_numbers" to speed up the step of STAR and Tophat.
1. Only using fastq.gz files:
/path/to/run_SFyNCS.sh -o /path_to/output_dir -a /path_to/gene_annotation.gpe -g /path_to/genome.fasta -s /path_to/star_index_dir -t /path_to/tophat_index_dir/file_prefix 1.fastq.gz 2.fastq.gz
2. Using Chimeric.out.junction produced by STAR and fastq.gz files:
/path/to/run_SFyNCS.sh -c /path_to/Chimeric.out.junction -o /path_to/output_dir -a /path_to/gene_annotation.gpe -g /path_to/genome.fasta -t /path_to/tophat_index_dir/file_prefix 1.fastq.gz 2.fastq.gz
